//
Flocker[] flock = new Flocker[2];

void setup() {
  size(400, 400);

  for (int i = 0; i < flock.length; i++) {
    flock[i] = new Flocker();
  }
}

void draw() {

  background(400);

  for (int i = 0; i < flock.length; i++) {
    flock[i].step();
    flock[i].draw();
  }
}

class Flocker {

  float x = random(width);
  float y = random(height);
  float heading = random(TWO_PI);
  float speed = random(1, 3); 
  float radius = random(10, 20);

  void step() {

    //find the closest Flocker
    float closestDistance = 100000;
    Flocker closestFlocker = null;
    for (int i = 0; i < flock.length; i++) {
      
      
      if (flock[i] != this) {
        float distance = dist(x, y, flock[i].x, flock[i].y);
        if (distance < closestDistance) {
          closestDistance = distance;
          closestFlocker = flock[i];
        }
      }
    }

    float angleToClosest = atan2(closestFlocker.y-y, closestFlocker.x-x);

    //prevent case where heading is 350 and angleToClosest is 10
    if (heading-angleToClosest > PI) {
      angleToClosest += TWO_PI;
    } else if (angleToClosest-heading > PI) {
      angleToClosest -= TWO_PI;
    }

    //turn towards closest
    if (heading < angleToClosest) {
      heading+=PI/40;
    } else {
      heading-=PI/40;
    }

    //move in direction
    x += cos(heading)*speed;
    y += sin(heading)*speed;

    //wrap around edges
    if (x < 0) {
      x = width;
    }
    if (x > width) {
      x = 0;
    }

    if (y < 0) {
      y = height;
    }
    if (y > height) {
      y = 0;
    }
  }

  void draw() {
    ellipse(x, y, radius, radius);
  }
}
